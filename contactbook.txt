import json

FILE_NAME = "contacts.json"

def load_contacts():
    """Load contacts from the JSON file."""
    try:
        with open(FILE_NAME, "r") as file:
            return json.load(file)
    except (FileNotFoundError, json.JSONDecodeError):
        return []

def save_contacts(contacts):
    """Save contacts to the JSON file."""
    with open(FILE_NAME, "w") as file:
        json.dump(contacts, file, indent=4)

def add_contact(contacts):
    """Add a new contact."""
    name = input("Enter the contact's name: ")
    phone = input("Enter the contact's phone number: ")
    email = input("Enter the contact's email address: ")
    address = input("Enter the contact's address: ")

    contacts.append({
        "name": name,
        "phone": phone,
        "email": email,
        "address": address
    })
    print("Contact added successfully.")

def view_contacts(contacts):
    """View all contacts."""
    if not contacts:
        print("No contacts found.")
        return
    print("\nContact List:")
    for index, contact in enumerate(contacts, start=1):
        print(f"{index}. {contact['name']} - {contact['phone']}")

def search_contact(contacts):
    """Search for a contact by name or phone number."""
    search_term = input("Enter the name or phone number to search: ")
    results = [contact for contact in contacts if search_term.lower() in contact['name'].lower() or search_term in contact['phone']]

    if results:
        print("\nSearch Results:")
        for index, contact in enumerate(results, start=1):
            print(f"{index}. {contact['name']} - {contact['phone']}")
            print(f"   Email: {contact['email']}")
            print(f"   Address: {contact['address']}")
    else:
        print("No contacts found with the given name or phone number.")

def update_contact(contacts):
    """Update an existing contact."""
    view_contacts(contacts)
    try:
        index = int(input("Enter the number of the contact to update: ")) - 1
        if 0 <= index < len(contacts):
            print("Leave a field blank to keep the current value.")
            name = input(f"Enter new name (current: {contacts[index]['name']}): ")
            phone = input(f"Enter new phone number (current: {contacts[index]['phone']}): ")
            email = input(f"Enter new email (current: {contacts[index]['email']}): ")
            address = input(f"Enter new address (current: {contacts[index]['address']}): ")

            if name:
                contacts[index]['name'] = name
            if phone:
                contacts[index]['phone'] = phone
            if email:
                contacts[index]['email'] = email
            if address:
                contacts[index]['address'] = address

            print("Contact updated successfully.")
        else:
            print("Invalid contact number.")
    except ValueError:
        print("Invalid input. Please enter a valid number.")

def delete_contact(contacts):
    """Delete a contact."""
    view_contacts(contacts)
    try:
        index = int(input("Enter the number of the contact to delete: ")) - 1
        if 0 <= index < len(contacts):
            contacts.pop(index)
            print("Contact deleted successfully.")
        else:
            print("Invalid contact number.")
    except ValueError:
        print("Invalid input. Please enter a valid number.")

def main():
    """Main function to run the Contact Book application."""
    contacts = load_contacts()

    while True:
        print("\nContact Book Application")
        print("1. Add a Contact")
        print("2. View Contact List")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")

        choice = input("Enter your choice (1-6): ")
        if choice == '1':
            add_contact(contacts)
        elif choice == '2':
            view_contacts(contacts)
        elif choice == '3':
            search_contact(contacts)
        elif choice == '4':
            update_contact(contacts)
        elif choice == '5':
            delete_contact(contacts)
        elif choice == '6':
            save_contacts(contacts)
            print("Exiting the application. Goodbye!")
            break
        else:
            print("Invalid choice. Please enter a number between 1 and 6.")

if __name__ == "__main__":
    main()
